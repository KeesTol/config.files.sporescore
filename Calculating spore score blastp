
Calculate_sporescore_blastp.R
# Load required libraries
library(dplyr)
library(readr)

# Get command-line arguments
args <- commandArgs(trailingOnly = TRUE)
blast_file <- args[1]              # Input BLASTP results file (.tsv)
feature_counts_file <- args[2]     # CDS coverage file (.tsv)
gene_signature_file <- args[3]     # Gene signature file (.tsv)
total_reads <- as.numeric(args[4]) # Total number of reads
output_file <- args[5]             # Output file path

# Step 1: Load and Filter BLASTP Results
process_blast_results <- function(blast_file) {
  blast_results <- read.table(blast_file, header = FALSE, sep = "\t", comment.char = "#")
  colnames(blast_results) <- c("Query", "Subject", "Identity", "AlignmentLength", "Mismatches",
                               "GapOpens", "QStart", "QEnd", "SStart", "SEnd", "Evalue", "BitScore")
  blast_results %>%
    filter(as.numeric(Evalue) < 0.001) %>%
    select(Query, Subject) %>%
    distinct()
}

# Step 2: Merge Feature Counts
merge_feature_counts <- function(feature_counts_file, blast_filtered) {
  feature_counts <- read.table(feature_counts_file, header = TRUE, sep = "\t", comment.char = "#")
  colnames(blast_filtered)[2] <- "Geneid"
  merge(feature_counts, blast_filtered, by = "Geneid") %>%
    rename(SporeGene = Query) %>%
    filter(!is.na(SporeGene))
}

# Step 3: Summarize Coverage per Spore Gene
summarize_coverage <- function(blast_with_counts) {
  blast_with_counts %>%
    group_by(SporeGene) %>%
    summarize(Hits = sum(Assembly.mg.reads.sorted.bam, na.rm = TRUE), .groups = "drop")
}

# Step 4: Load Gene Signature and Join with Coverage
process_gene_signature <- function(gene_signature_file, coverage_summary) {
  gene_signature <- read_tsv(gene_signature_file, col_types = cols()) %>%
    distinct(uniprot, .keep_all = TRUE)
  
  coverage_summary %>%
    mutate(uniprot = sub(".*\\|([A-Z0-9]+)\\|.*", "\\1", SporeGene),
           uniprot = trimws(uniprot)) %>%
    left_join(select(gene_signature, uniprot, weight), by = "uniprot")
}

# Step 5: Calculate SporeScore and Save
calculate_and_output <- function(final_table, total_reads, output_file) {
  final_table <- final_table %>%
    mutate(WeightedHits = Hits * weight) %>%
    select(uniprot, Hits, weight, WeightedHits)
  
  sporescore <- sum(final_table$WeightedHits, na.rm = TRUE) / total_reads
  cat("SporeScore (BLASTP Method):", sporescore, "\n")
  
  write.table(final_table, output_file, sep = "\t", row.names = FALSE, quote = FALSE)
  return(final_table)
}

# Main Execution
blast_filtered <- process_blast_results(blast_file)
blast_with_counts <- merge_feature_counts(feature_counts_file, blast_filtered)
coverage_summary <- summarize_coverage(blast_with_counts)
final_table <- process_gene_signature(gene_signature_file, coverage_summary)
final_table_with_score <- calculate_and_output(final_table, total_reads, output_file)

# Optional preview
head(final_table_with_score)
